#include <NTL/ZZ.h>
#include <iostream>
#include "headers/RSA.h"
#include "headers/functions.h"
#include <vector>

using std::cin;
using std::cout;
using std::endl;

int main()
{
    ZZ bits;
    bits = 1024;

    //nuestro abecedario y firma
    string alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ,.-( )abcdefghijklmnopqrstuvwxyz<>*1234567890";
    string firma = "Sebastian Tinajeros Estrada Sebastian Gonzalo Postigo Avalos Fabian Concha Sifuentes Joaquin Casusol Escalante Frank Salas Ticona 201-10-47883 201-10-48100 201-10-47533 201-10-47494 201-10-47829 sebastian.tinajerosucsp.edu.pe sebastian.postigoucsp.edu.pe fabian.conchaucsp.edu.pe joaquin.casusolucsp.edu.pe frank.salasucsp.edu.pe";

    RSA Emisor(bits,alpha,firma);
    RSA Receptor(bits,alpha,firma);

    string mensaje = "this is theodor theodor loves to draw he doesnt climb but sure can rhyme oh the rhymes he can rhyme they are sublime every time and the draws he can draw you just cannot ignore read more see more rhyme more draw more rhyme and draw more be like theodor this is theodor theodor loves to draw he doesnt climb but sure can rhyme oh the rhymes he can rhyme they are sublime every time and the draws he can draw you just cannot ignore read more see more rhyme more draw more rhyme and draw more be like theodor this is theodor theodor loves to draw he doesnt climb but sure can rhyme oh the rhymes he can rhyme they are sublime every time and the draws he can draw you just cannot ignore read more see more rhyme more draw more rhyme and draw more be like theodor";
    //cout << "\nIngrese el mensaje a ser cifrado: ";
    //getline(cin, mensaje);

    //claves publicas
    ZZ ea = Emisor.e;
    ZZ Na = Emisor.N;
    ZZ eb = Receptor.e;
    ZZ Nb = Receptor.N;
    bool WithSig = true;
    //Emisor cifra
    vector<string>messagecif = Emisor.cypherwithsignature(mensaje, eb, Nb);
    cout << "El mensajeCifrado es: " << messagecif.at(0) << "\nfirma:\n" << messagecif.at(1) << endl;
    //Receptor decifra
    vector<string>messagedec = Receptor.decypherwithsignature(messagecif, ea, Na);
    cout << "\nMensaje:\n" << messagedec.at(0) << "\nfirma\n" << messagedec.at(1) << endl;

    //string mensajeCifrado = Emisor.cypher(mensaje,eb,Nb,WithSig);
    //cout << "El mensajeCifrado es: " << mensajeCifrado << endl;
    //string mensajeDecifrado = Receptor.decypher(mensajeCifrado,ea,Na,WithSig);
    //string mensajeDecifrado = Receptor.decypher(mensajeCifrado,ea,Na,WithSig);

/*
    ZZ p = conv<ZZ>("115740550565614621099866128458385431079730804003686117688412425796904672342681147093729346562399199696839875665649292582265091532115169118185143103212276163665497184742137489762924129857897603368103999607263349385756237568504378492673082141651500990547365149504683413949426507081758248659176613920711884122089");
    ZZ q = conv<ZZ>("95350831162878061231930423541470081967591432630493566267648786824694706677436978749397639277224305473850771932613620704646333614455955109330480931648868599860062770047154622321714689191684594085820874550793676336469651880310645115297566811548932185086201485269033080231170071934709905067203822487250474709641");
    ZZ N = conv<ZZ>("11035957695680470629665887008861615863038483876644914413775411794481421755875213993257931987396903390050367567577289370581213203460099664948607277765194962729317562504975580631300863597834718056019549735484953933450220401084949036743121812127774040647935470029080978260797025069870719551347555435804391430664541216261864511526132575108907296076268176037455194939262574269696776211868247505190629734438866636027289119734426223811496818576334759309229265298190220822129377363956353529163357863198156969810501875412873219588822435415921123173107719023630593916766269363145455376452691537736084699110859386841280469360049");
    ZZ fiN = conv<ZZ>("11035957695680470629665887008861615863038483876644914413775411794481421755875213993257931987396903390050367567577289370581213203460099664948607277765194962729317562504975580631300863597834718056019549735484953933450220401084949036743121812127774040647935470029080978260797025069870719551347555435804391430664330124880136018843800778556907440563220853800821015255306513057075176832848129379347502748599243130856598472136163310524585393429763635081713641263329076058603817409167061417078719044148574772356577001254816193866596545967106099565137070070430160741132702728371738882272094958719616545384478950433318110528320");
    ZZ e = conv<ZZ>("5721042780329041524149827372999976361221176335833751422338038476054912674461105290169321751466761714013797974469860461061677556455773599314148363991773426088426007942586594480326664406400533688329137394967831790177876643753391189293524460956090816354758610281106102262302008002835683829916273144878681865218954759361539807352651209533333075644995755118558701793878844873345526505613917044275020335379313732128336556038506479514059859723054299688553971509194520430675185352139839594056229950785843151388298705309984178832547783429402406456732533362307902056532260957527885524817832914483586607201861818752674766309179");
    ZZ d = conv<ZZ>("2559524504412240822405759148187089984492870199693143091507999892835622546579951720187877664905592640596285969749797966186811143237552348254158490316716028698555916076216329899701809723811528717238982135662516835208369759254029682862052543805254778507387506096464736151183823209631740994817932737104210889017922260693740673733746010468963502661596775675279229799084147317097598982651441855192849553544136117391651381758879316809399166727751706918985591599069738657575814511447807809441933359948547628054274198241452218971259432484136151428360748766043676692675167781406020191323536309760125561059010876668715272558899");
    string alpha="ABCDEFGHIJKLMNOPQRSTUVWXYZ,.-( )abcdefghijklmnopqrstuvwxyz<>*1234567890";
    string sig = "Sebas Sebas2 Fabian Joaquin Frank Sebas Sebas2 Fabian Joaquin Frank Sebas Sebas2 Fabian Joaquin Frank";
    RSA Receptor(p, q, e, alpha, sig);
    vector<string>Cypher;
    //mensaje
    Cypher.push_back("01077672076302313029120816112340400703856970241811797052155877797444933184436505031573764222762279957885786558159000995382517884155863195361041542343201352422030271322577960861232038177535546520604088327017054701551862288629170015021327531873413150790938904911545490355504089188809638124620774972359718701430982802042708295660356520473612977231357720598362330285098370602091960779800609500563818111247994930170867953790175291238014898356829459193884103242712908639032220483626705100475223310323655925543800077213751784013740546709271800395666086542893611933188876247728811952444311556218868262240979363033499707751145");
    //firma
    Cypher.push_back("01077672076302313029120816112340400703856970241811797052155877797444933184436505031573764222762279957885786558159000995382517884155863195361041542343201352422030271322577960861232038177535546520604088327017054701551862288629170015021327531873413150790938904911545490355504089188809638124620774972359718701430982802042708295660356520473612977231357720598362330285098370602091960779800609500563818111247994930170867953790175291238014898356829459193884103242712908639032220483626705100475223310323655925543800077213751784013740546709271800395666086542893611933188876247728811952444311556218868262240979363033499707751145");
    Cypher=Receptor.decypherwithsignature(Cypher,e,N);
    std::cout<<"\nMensaje:\n"<<Cypher.at(0)<<"\nFirma:\n"<<Cypher.at(1);
*/
}
